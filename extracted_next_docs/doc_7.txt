--- METADATA ---
source: https://nextjs.org/docs/pages/building-your-application/rendering/server-side-rendering
timestamp: 1741908747.9112408
content_type: text/html; charset=utf-8
last_modified: 
title: Rendering: Server-side Rendering (SSR) | Next.js
description: Use Server-side Rendering to render pages on each request.
language: en
canonical_url: https://nextjs.org/docs/pages/building-your-application/rendering/server-side-rendering
--- CONTENT ---

Rendering: Server-side Rendering (SSR) | Next.js Menu Using App Router Features available in /app Using Latest Version 15.2.2 Building Your Application Rendering Server-side Rendering (SSR) Server-side Rendering (SSR) Also referred to as "SSR" or "Dynamic Rendering". If a page uses Server-side Rendering , the page HTML is generated on each request . To use Server-side Rendering for a page, you need to export an async function called getServerSideProps . This function will be called by the server on every request. For example, suppose that your page needs to pre-render frequently updated data (fetched from an external API). You can write getServerSideProps which fetches this data and passes it to Page like below: export default function Page ({ data }) { // Render data... } // This gets called on every request export async function getServerSideProps () { // Fetch data from external API const res = await fetch ( `https://.../data` ) const data = await res .json () // Pass data to the page via props return { props : { data } } } As you can see, getServerSideProps is similar to getStaticProps , but the difference is that getServerSideProps is run on every request instead of on build time. To learn more about how getServerSideProps works, check out our Data Fetching documentation . Was this helpful? supported. Send